import sys
import configparser
import logging
import logging.handlers
import logging.config

from coordinator import Coordinator
from common import Request
from database import Database
from client import Client

def main():
 
    if (len(sys.argv) < 2):
        output("ERR: Please provide a config file")
        exit(1)

    config = configparser.ConfigParser()

    # it fails if the config file is not a ini file with sections
    config.read(str(sys.argv[1]))

    if not config:
        output("ERR: Cannot read config file. Please check structure")
        exit(1)

    
    # set up logging
    logging.config.fileConfig(str(config.get("setup", "log_conf_file")), 
                                    defaults={'logfilename':
                                    str(config.get("setup", "log_dump_file"))})
    
    logger = logging.getLogger('sLogger')

    logger.info("Policy Evaluation Engine Configuration :")
    logger.info("Total coordinators:    %s ", config.get("setup", "num_coords"))
    logger.info("Workers per coordinator:    %s ", config.get("setup", "num_worker_per_coord"))
    logger.info("Database init file:    %s ", config.get("setup", "database_init_file"))
    logger.info("Log conf file:     %s ", config.get("setup", "log_conf_file"))    
    logger.info("Log dump file:    %s ", config.get("setup", "log_dump_file"))
    logger.info("Number of clients:    %s ", config.get("setup", "mindblatency"))
    logger.info("Min DB Latency:    %s ", config.get("setup", "mindblatency"))
    logger.info("Max DB Latency:    %s \n", config.get("setup", "maxdblatency"))

    # creating database process
    database = new(Database, num = 1)
    database_init_file = str(config.get("setup", "database_init_file"))
    setup(database, (database_init_file, ))
    start(database)   

    # creating coordinators
    total_coords = int(config.get("setup", "num_coords"))
    coordinators_set = new(Coordinator, num = total_coords)
    coordinators = list(coordinators_set)

    for p in coordinators: setup(p, (coordinators, database, config, ))
    start(coordinators)

    # creating clients
    total_clients = int(config.get("setup", "num_clients"))

    clients = new(Client, num = total_clients)
    i = 0
    for p in clients : 
        setup(p, (coordinators, i + 1, config,))
        i = i + 1

    start(clients)