class Request(object):
    def __init__(self, subject_id, resource_id, action):
        self.subject_id         = subject_id
        self.resource_id        = resource_id
        
        self.action             = action
        
        self.sub_tent_updates   = {}
        self.res_tent_updates   = {}

        self.owner              = None

        self.timestamp          = None

    def __str__(self):
        return ("\nSubject ID: {0} \
                    \nResource ID: {1} \
                    \nAction: {2} \
                    \nSubject Tentative Attributes: {3} \
                    \nResource Tentative Attributes: {4} \
                    \nOwner: {5} \
                    \nTimeStamp: {6}"
                    .format(
                        self.subject_id,
                        self.resource_id,
                        self.action,
                        self.sub_tent_updates,
                        self.res_tent_updates,
                        self.owner,
                        self.timestamp))

class Response(object):
    def __init__(self, request, result):
        self.request            = request
        self.result             = result

        self.sub_tent_attr_used = {}
        self.res_tent_attr_used = {}

        self.sub_db_attr_used   = {}
        self.res_db_attr_used   = {}

        self.sub_to_update      = {}
        self.res_to_update      = {}

    def __str__(self):
        return (self.request.__str__() + \
                "\nSubject Tentative Attributes Used To Evaluate Policy: {0} \
                \nResource Tentative Attributes Used To Evaluate Policy: {1} \
                \nSubject DB Attributes Used To Evaluate Policy: {2} \
                \nResource DB Attributes Used To Evaluate Policy: {3} \
                \nSubject To Update: {4} \
                \nResource To Update: {5} \
                \nResult: {6}"
                .format(
                    self.sub_tent_attr_used,
                    self.res_tent_attr_used,
                    self.sub_db_attr_used,
                    self.res_db_attr_used,
                    self.sub_to_update,
                    self.res_to_update,
                    self.result))

class DataBaseResponse(object):
    def __init__(self, request):
        self.request                    = request
        self.sub_database_attributes    = {}
        self.res_database_attributes    = {}
        self.result = False

    def __str__(self):
        return (self.request.__str__() + \
                "\nSubject Database Attributes: {0} \
                 \nResource Database Attributes: {1}"
                .format(
                    self.sub_database_attributes),
                    self.res_database_attributes)

class Rule(object):
    def __init__(self, subject_condition, resource_condition, action, subject_update, resource_update):
        self.subject_condition = subject_condition
        self.resource_condition = resource_condition
        self.action = action
        self.subject_update = subject_update
        self.resource_update = resource_update

    def __str__(self):
        return ("\nSubject Condition: {0} \
                     \nResource Condition: {1} \
                     \nAction: {2} \
                     \nSubject Update: {3} \
                     \nResource Update: {4}"
                    .format(
                        self.subject_condition,
                        self.resource_condition,
                        self.action,
                        self.subject_update,
                        self.resource_update))
